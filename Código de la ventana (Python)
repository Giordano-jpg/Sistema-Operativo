
import tkinter as tk
from PIL import Image, ImageTk
import time
from datetime import datetime


def iniciar():
    canvas_inicio.after(2000, canvas_inicio.destroy)


def boton_clicado():
    print("Botón clicado")


def cerrar_ventana():
    fondo_label.destroy()
    boton1.destroy()
    boton2.destroy()
    boton3.destroy()
    boton4.destroy()
    label_fecha_hora.destroy()
    bandera_label.destroy()
    etiqueta_bateria.destroy()
    canvas.destroy()
    label_texto = tk.Label(ventana, text="Apagando", font=("Arial", 24), bg="black", fg="white")
    pos_x = ancho_pantalla // 2
    pos_y = alto_pantalla // 2
    label_texto.place(relx=0.5, rely=0.5, anchor=tk.CENTER)
    ventana.after(2500, ventana.destroy)


def actualizar_fecha_y_hora():
    # Verificar si la etiqueta aún existe
    if label_fecha_hora.winfo_exists():
        now = datetime.now()
        fecha_hora_actual = now.strftime("%Y-%m-%d %H:%M:%S")
        label_fecha_hora.config(text=fecha_hora_actual)
        ventana.after(1000, actualizar_fecha_y_hora)


def abrir_explorador_de_archivos():
    # Crear la ventana secundaria
    ventana2 = tk.Toplevel()
    ventana2.geometry("420x300+100+100")
    ventana2.title("Explorador de archivos")

    # Cargar y mostrar las imágenes de carpeta en horizontal con texto debajo
    imagen_carpeta = Image.open("carpeta.png")
    imagen_carpeta = imagen_carpeta.resize((100, 100), Image.BICUBIC)
    imagen_carpeta = ImageTk.PhotoImage(imagen_carpeta)

    for i in range(3):
        etiqueta_carpeta = tk.Label(ventana2, image=imagen_carpeta)
        etiqueta_carpeta.grid(row=0, column=i, padx=10, pady=10)

        # Agregar texto debajo de cada imagen
        etiqueta_texto = tk.Label(ventana2, text=f"Carpeta {i+1}")
        etiqueta_texto.grid(row=1, column=i)

    ventana2.mainloop()


ventana = tk.Tk()
ventana.attributes("-fullscreen", True)

imagen_fondo = Image.open("fernando-alonso.png")
imagen_fondo = imagen_fondo.resize((ventana.winfo_screenwidth(), ventana.winfo_screenheight()), Image.BICUBIC)
imagen_fondo = ImageTk.PhotoImage(imagen_fondo)

fondo_label = tk.Label(ventana, image=imagen_fondo)
fondo_label.place(x=0, y=0, relwidth=1, relheight=1)

ventana.configure(bg="black")

ancho_pantalla = ventana.winfo_screenwidth()
alto_pantalla = ventana.winfo_screenheight()

# Cambiar el estilo de los botones
estilo_boton = {"font": ("Helvetica", 12, "bold"), "bg": "#FF0000", "fg": "white", "relief": "raised", "bd": 2}

imagen_original = Image.open("nano.jpg")
imagen_original = imagen_original.resize((100, 100), Image.BICUBIC)
imagen_carpeta = Image.open("icono_carpeta.png")
imagen_carpeta = imagen_carpeta.resize((80, 80), Image.BICUBIC)
imagen_original2 = Image.open("cabeza_prueba.jpg")
imagen_original2 = imagen_original2.resize((100, 100), Image.BICUBIC)

imagen_boton = ImageTk.PhotoImage(imagen_original)
imagen_carpeta = ImageTk.PhotoImage(imagen_carpeta)
imagen_boton_serpiente = ImageTk.PhotoImage(imagen_original2)

# Crear botones con el estilo personalizado
boton1 = tk.Button(ventana, image=imagen_boton, command=boton_clicado, **estilo_boton)
boton1.place(x=ancho_pantalla // 80, y=alto_pantalla // 50, width=100, height=100)

boton2 = tk.Button(ventana, image=imagen_boton_serpiente, command=boton_clicado, **estilo_boton)
boton2.place(x=ancho_pantalla // 9, y=alto_pantalla // 50, width=100, height=100)

boton3 = tk.Button(ventana, image=imagen_carpeta, command=abrir_explorador_de_archivos, **estilo_boton)
boton3.place(x=ancho_pantalla // 80, y=alto_pantalla // 5, width=100, height=100)

boton4 = tk.Button(ventana, text="Cerrar", command=cerrar_ventana, **estilo_boton)
boton4.place(x=ancho_pantalla // 9, y=alto_pantalla // 5, width=100, height=100)

canvas = tk.Canvas(ventana, bg="white")
canvas.place(x=ancho_pantalla // 2000, y=alto_pantalla // 1.08, width=ancho_pantalla, height=alto_pantalla // 13)

imagen_original_bateria = Image.open("bateria-llena.png")
ancho_original_bateria, alto_original_bateria = imagen_original_bateria.size

ancho_deseado_bateria = 50
escala_bateria = ancho_deseado_bateria / ancho_original_bateria
nuevo_ancho_bateria = int(ancho_original_bateria * escala_bateria)
nuevo_alto_bateria = int(alto_original_bateria * escala_bateria)

imagen_original_bateria.thumbnail((nuevo_ancho_bateria, nuevo_alto_bateria))
imagen_bateria = ImageTk.PhotoImage(imagen_original_bateria)

etiqueta_bateria = tk.Label(ventana, image=imagen_bateria)
etiqueta_bateria.pack()
etiqueta_bateria.place(relx=1.0, rely=1.0, anchor='se')

# Cargar imagen de la bandera de España
imagen_bandera_espana = Image.open("bandera_espana.jpg")
# Escalar la imagen para que tenga la misma altura que la barra blanca
imagen_bandera_espana = imagen_bandera_espana.resize((70, alto_pantalla // 14), Image.BICUBIC)

# Convertir la imagen a PhotoImage
imagen_bandera_espana_tk = ImageTk.PhotoImage(imagen_bandera_espana)

# Creamos un widget de etiqueta para mostrar la imagen de la bandera de España
bandera_label = tk.Label(ventana, image=imagen_bandera_espana_tk)
bandera_label.place(relx=0, rely=1.0, anchor='sw')

label_fecha_hora = tk.Label(ventana, font=("Arial", 18), bg="white")
label_fecha_hora.place(relx=0.95, rely=0.99, anchor='se')
actualizar_fecha_y_hora()

canvas_inicio = tk.Canvas(ventana, bg = "black", width = ancho_pantalla, height = alto_pantalla, highlightthickness = 0)
canvas_inicio.pack()
label_inicio = tk.Label(canvas_inicio, text="Iniciando", font=("Arial", 24), bg="black", fg="white")
label_inicio.place(relx=0.5, rely=0.5, anchor=tk.CENTER)
iniciar()
ventana.mainloop()
